////  ProfileSetupView.swift//  Vrtko////  Created by Mihael Lendvaj on 31.05.2025..//import SwiftUIstruct ProfileSetupView: View {    @EnvironmentObject var authService: AuthService    @State private var firstName: String = ""    @State private var lastName: String = ""    @State private var selectedRole: UserRole = .gardener    @State private var location: String = ""    @State private var isLoading = false    @State private var errorMessage = ""        var isFormValid: Bool {        !firstName.isEmpty && !lastName.isEmpty && !location.isEmpty    }        var body: some View {        NavigationView {            VStack(spacing: 24) {                Text("Dovrši svoj profil")                    .font(.title)                    .bold()                    .padding(.top, 32)                                VStack(spacing: 16) {                    TextField("Ime", text: $firstName)                        .textContentType(.givenName)                        .autocorrectionDisabled()                        .padding()                        .background(Color(UIColor.systemGray6))                        .cornerRadius(8)                                        TextField("Prezime", text: $lastName)                        .textContentType(.familyName)                        .autocorrectionDisabled()                        .padding()                        .background(Color(UIColor.systemGray6))                        .cornerRadius(8)                                        Picker("Uloga", selection: $selectedRole) {                        Text("Sadnja i praćenje vrta").tag(UserRole.gardener)                        Text("Razgledavanje/kupovinu").tag(UserRole.buyer)                    }                    .pickerStyle(.segmented)                    .padding(.vertical, 8)                                        TextField("Lokacija (npr. Zagreb)", text: $location)                        .textContentType(.addressCity)                        .autocorrectionDisabled()                        .padding()                        .background(Color(UIColor.systemGray6))                        .cornerRadius(8)                }                .padding(.horizontal, 24)                                if !errorMessage.isEmpty {                    Text(errorMessage)                        .foregroundColor(.red)                        .multilineTextAlignment(.center)                        .padding(.horizontal, 24)                }                                Button(action: {                    Task { await saveProfile() }                }) {                    if isLoading {                        ProgressView()                    } else {                        Text("Spremi profil")                            .font(.headline)                            .foregroundColor(.white)                            .frame(maxWidth: .infinity)                            .padding()                            .background(isFormValid ? Color.primaryGreen : Color.gray.opacity(0.4))                            .cornerRadius(8)                    }                }                .disabled(!isFormValid || isLoading)                .padding(.horizontal, 24)                                Spacer()            }            .navigationBarHidden(true)            .background(Color.white.ignoresSafeArea())        }        .onAppear {            // Ako je korisnik već ima podatke (npr. kod Google sign-ina), možeš ih unaprijed popuniti            if let user = authService.user {                let nameParts = user.name.split(separator: " ")                if nameParts.count > 0 { firstName = String(nameParts[0]) }                if nameParts.count > 1 { lastName = nameParts.dropFirst().joined(separator: " ") }                selectedRole = user.role                location = user.location            }        }    }        private func saveProfile() async {        isLoading = true        errorMessage = ""        let fullName = "\(firstName) \(lastName)"        do {            try await authService.updateProfile(                name: fullName,                role: selectedRole,                location: location            )            // Nakon uspješnog spremanja, korisnik će automatski biti preusmjeren u glavni dio aplikacije (ContentView)        } catch {            errorMessage = "Greška pri spremanju profila. Pokušaj ponovno."        }        isLoading = false    }}struct ProfileSetupView_Previews: PreviewProvider {    static var previews: some View {        ProfileSetupView()            .environmentObject(AuthService())    }}