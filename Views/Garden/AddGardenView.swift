//
//  AddGardenView.swift
//  Vrtko
//
//  Created by Mihael Lendvaj on 31.05.2025..
//


import SwiftUIstruct AddGardenView: View {    @Environment(\.dismiss) var dismiss    @ObservedObject var gardenRepo: GardenRepository    @EnvironmentObject var authService: AuthService    @State private var name = ""    @State private var description = ""    @State private var isPublic = false    // Lokacija i slike možeš proširiti kasnije    @State private var location = ProductLocation(address: "", city: "", postalCode: "", latitude: nil, longitude: nil, distanceFromUser: nil)    @State private var photos: [String] = []    @State private var errorMessage = ""    @State private var isLoading = false    var body: some View {        NavigationView {            Form {                Section(header: Text("Osnovno")) {                    TextField("Ime vrta", text: $name)                    TextField("Opis", text: $description)                    Toggle("Javni vrt", isOn: $isPublic)                }                Section(header: Text("Lokacija")) {                    TextField("Adresa", text: $location.address)                    TextField("Grad", text: $location.city)                    TextField("Poštanski broj", text: $location.postalCode)                }                // Možeš dodati sekciju za slike kasnije                if !errorMessage.isEmpty {                    Text(errorMessage).foregroundColor(.red)                }            }            .navigationTitle("Novi vrt")            .toolbar {                ToolbarItem(placement: .confirmationAction) {                    Button("Spremi") {                        Task { await saveGarden() }                    }                    .disabled(name.isEmpty)                }                ToolbarItem(placement: .cancellationAction) {                    Button("Odustani") { dismiss() }                }            }        }    }    private func saveGarden() async {        guard let ownerId = authService.user?.id else {            errorMessage = "Nema korisnika."            return        }        isLoading = true        let newGarden = Garden(            id: nil,            name: name,            description: description,            ownerId: ownerId,            location: location,            isPublic: isPublic,            createdAt: Date(),            photos: photos        )        do {            try await gardenRepo.addGarden(newGarden)            dismiss()        } catch {            errorMessage = "Greška pri spremanju: \(error.localizedDescription)"        }        isLoading = false    }}