//
//  GardenDetailView.swift
//  Vrtko
//
//  Created by Mihael Lendvaj on 01.06.2025..
//


import SwiftUIstruct GardenDetailView: View {    let garden: Garden    @ObservedObject var gardenRepo: GardenRepository    @StateObject private var plantRepo = PlantRepository()    @State private var showingAddPlant = false    @State private var showingEditGarden = false    @State private var plantToDelete: GardenPlant?    @State private var showDeleteAlert = false    @State private var selectedPlant: GardenPlant?    @State private var showPlantDetail = false    var body: some View {        List {            plantListSection            addPlantSection        }        .listStyle(.insetGrouped)        .navigationTitle(garden.name)        .toolbar {            ToolbarItem(placement: .navigationBarTrailing) {                HStack {                    Button(action: { showingEditGarden = true }) {                        Image(systemName: "pencil")                    }                    Button(action: { showingAddPlant = true }) {                        Image(systemName: "plus")                    }                }            }        }        .sheet(isPresented: $showingAddPlant) {            AddPlantView(gardenId: garden.id, plantRepo: plantRepo)        }        .sheet(isPresented: $showingEditGarden) {            EditGardenView(garden: garden, gardenRepo: gardenRepo)        }        .sheet(isPresented: $showPlantDetail) {            if let selectedPlant {                PlantDetailView(plant: selectedPlant)            }        }        .alert("Želite li obrisati ovu biljku?", isPresented: $showDeleteAlert, presenting: plantToDelete) { plant in            Button("Obriši", role: .destructive) {                Task { await deletePlant(plant) }            }            Button("Odustani", role: .cancel) {}        } message: { plant in            Text("Biljka: \(plant.plantType.name)")        }        .onAppear {            plantRepo.fetchPlants(for: garden.id)        }    }    /// MARK: - Sekcije    var plantListSection: some View {        Section {            if plantRepo.plants.isEmpty {                Text("Nema biljaka u ovom vrtu.")                    .foregroundColor(.secondary)                    .italic()            } else {                ForEach(plantRepo.plants) { plant in                    Button {                        selectedPlant = plant                        showPlantDetail = true                    } label: {                        PlantRow(plant: plant)                    }                }                .onDelete { indexSet in                    if let index = indexSet.first {                        plantToDelete = plantRepo.plants[index]                        showDeleteAlert = true                    }                }            }        }    }    var addPlantSection: some View {        Section {            Button {                showingAddPlant = true            } label: {                HStack {                    Image(systemName: "plus.circle.fill")                        .foregroundColor(.green)                    Text("Dodaj biljku")                        .foregroundColor(.primary)                }            }        }    }    /// MARK: - Helperi    private func deletePlant(_ plant: GardenPlant) async {        guard let id = plant.id else { return }        do {            try await plantRepo.deletePlant(withId: id)        } catch {            // error handling        }    }}