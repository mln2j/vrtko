//
//  CustomMapPickerView.swift
//  Vrtko
//
//  Created by Mihael Lendvaj on 02.06.2025..
//


import SwiftUIimport MapKitstruct CustomMapPickerView: UIViewRepresentable {    @Binding var selectedCoordinate: CLLocationCoordinate2D?    var initialCoordinate: CLLocationCoordinate2D    class Coordinator: NSObject, MKMapViewDelegate {        var parent: CustomMapPickerView        init(parent: CustomMapPickerView) {            self.parent = parent        }        @objc func handleTap(_ gesture: UITapGestureRecognizer) {            guard let mapView = gesture.view as? MKMapView else { return }            let point = gesture.location(in: mapView)            let coord = mapView.convert(point, toCoordinateFrom: mapView)            parent.selectedCoordinate = coord            mapView.removeAnnotations(mapView.annotations)            let annotation = MKPointAnnotation()            annotation.coordinate = coord            mapView.addAnnotation(annotation)        }        // Custom zelena boja za pin        func mapView(_ mapView: MKMapView, viewFor annotation: MKAnnotation) -> MKAnnotationView? {            let identifier = "CustomPin"            var annotationView = mapView.dequeueReusableAnnotationView(withIdentifier: identifier) as? MKMarkerAnnotationView            if annotationView == nil {                annotationView = MKMarkerAnnotationView(annotation: annotation, reuseIdentifier: identifier)                annotationView?.canShowCallout = false            } else {                annotationView?.annotation = annotation            }            annotationView?.markerTintColor = UIColor.primaryGreen            return annotationView        }    }    func makeCoordinator() -> Coordinator {        Coordinator(parent: self)    }    func makeUIView(context: Context) -> MKMapView {        let mapView = MKMapView()        mapView.delegate = context.coordinator        let gesture = UITapGestureRecognizer(target: context.coordinator, action: #selector(Coordinator.handleTap(_:)))        mapView.addGestureRecognizer(gesture)        let region = MKCoordinateRegion(center: initialCoordinate, span: MKCoordinateSpan(latitudeDelta: 0.01, longitudeDelta: 0.01))        mapView.setRegion(region, animated: false)        if let coord = selectedCoordinate {            let annotation = MKPointAnnotation()            annotation.coordinate = coord            mapView.addAnnotation(annotation)        }        return mapView    }    func updateUIView(_ mapView: MKMapView, context: Context) {        mapView.removeAnnotations(mapView.annotations)        if let coord = selectedCoordinate {            let annotation = MKPointAnnotation()            annotation.coordinate = coord            mapView.addAnnotation(annotation)            let region = MKCoordinateRegion(center: coord, span: MKCoordinateSpan(latitudeDelta: 0.01, longitudeDelta: 0.01))            mapView.setRegion(region, animated: true)        }    }}