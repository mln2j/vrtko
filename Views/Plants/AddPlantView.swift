////  AddPlantView.swift//  Vrtko////  Created by Mihael Lendvaj on 31.05.2025..//import SwiftUIstruct AddPlantView: View {    @Environment(\.dismiss) var dismiss    @ObservedObject var plantRepo: PlantRepository    let gardenId: String    @State private var name = ""    @State private var variety = ""    @State private var notes = ""    @State private var status: PlantStatus = .planted    var body: some View {        NavigationView {            Form {                TextField("Naziv biljke", text: $name)                TextField("Sorta", text: $variety)                Picker("Status", selection: $status) {                    ForEach(PlantStatus.allCases, id: \.self) { status in                        Text(status.displayName).tag(status)                    }                }                TextField("BiljeÅ¡ke", text: $notes)            }            .navigationTitle("Dodaj biljku")            .toolbar {                ToolbarItem(placement: .confirmationAction) {                    Button("Spremi") {                        Task { await savePlant() }                    }                    .disabled(name.isEmpty)                }                ToolbarItem(placement: .cancellationAction) {                    Button("Odustani") { dismiss() }                }            }        }    }    private func savePlant() async {        let newPlant = GardenPlant(            id: nil,            gardenId: gardenId,            plantType: PlantType(id: nil, name: name, category: .vegetables, scientificName: nil, daysToMaturity: 0, plantingMonths: [], harvestMonths: [], difficulty: .easy, sunRequirement: .fullSun, waterRequirement: .medium, spaceRequirement: 0, icon: "ðŸŒ±"),            variety: variety,            status: status,            plantedDate: Date(),            expectedHarvestDate: nil,            actualHarvestDate: nil,            notes: notes,            photos: [],            location: nil        )        do {            try await plantRepo.addPlant(newPlant)            dismiss()        } catch {            // PrikaÅ¾i error ako treba        }    }}