////  PlantRepository.swift//  Vrtko////  Created by Mihael Lendvaj on 31.05.2025..//import Foundationimport FirebaseFirestoreclass PlantRepository: ObservableObject {    @Published var plants: [GardenPlant] = []    private var listener: ListenerRegistration?    func fetchPlants(for gardenId: String) {        listener?.remove()        listener = Firestore.firestore().collection("plants")            .whereField("gardenId", isEqualTo: gardenId)            .addSnapshotListener { snapshot, error in                guard let documents = snapshot?.documents else { return }                self.plants = documents.compactMap { try? $0.data(as: GardenPlant.self) }            }    }        func deletePlant(withId id: String) async throws {        try await Firestore.firestore().collection("plants").document(id).delete()    }    func addPlant(_ plant: GardenPlant) async throws {        var newPlant = plant        newPlant.id = nil        try Firestore.firestore().collection("plants").addDocument(from: newPlant)    }    deinit {        listener?.remove()    }}